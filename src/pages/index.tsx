/* eslint-disable @typescript-eslint/restrict-template-expressions */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { api } from "~/utils/api";
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import type { RouterOutputs } from "~/utils/api";


dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();
  if(!user) return null;

  return(
    <div className="flex gap-3 w-full">
      <Image
        src={user.profileImageUrl}
        alt="User profile image"
        className="w-14 h-14 rounded-full"
        width={14}
        height={14}
      />
      <input type="text" placeholder="Type some emojis" className="bg-transparent grow outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  console.log(author.username)

  return(
    <div className="flex items-center gap-3 p-4 border-b border-slate-400" key={post.id}>
      <Image
        src={author.profileImageUrl}
        alt={`${author.firstName} avatar`}
        className="w-14 h-14 rounded-full"
        width={14}
        height={14}
      />
      <div className="flex flex-col">
        <div className="flex gap-2 text-slate-400">
          <span className='text-white font-medium'>{author.username === null ? author.firstName: `@${author.username}`}</span>
          <span> Â· {dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Home: NextPage = () => {
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if(isLoading) return <div>Loading ...</div>
  if (!data) return <div>Something went wrong</div>


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && <CreatePostWizard />}
            </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
            </div>
        </div>
      </main>
    </>
  );
};

export default Home;
